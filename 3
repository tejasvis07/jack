exp 3
import numpy as np

def s(x): return 1/(1+np.exp(-x))
def ds(x): return x*(1-x)

X = np.array([[0,0],[0,1],[1,0],[1,1]])
y = np.array([[0],[1],[1],[0]])

np.random.seed(42)
W1 = np.random.uniform(size=(2,2))
W2 = np.random.uniform(size=(2,1))

lr = 0.1
for _ in range(10000):
    h = s(X.dot(W1))
    out = s(h.dot(W2))
    e = y - out
    d2 = e * ds(out)
    d1 = d2.dot(W2.T) * ds(h)
    W2 += h.T.dot(d2) * lr
    W1 += X.T.dot(d1) * lr

for x in X:
    h = s(x.dot(W1))
    print(f"{x} -> {np.round(s(h.dot(W2))[0],3)}")
